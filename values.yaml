# Default values for kuard-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Uygulamamızın temel ayarları
replicaCount: 3

# Container image ayarları
image:
  repository: gcr.io/kuar-demo/kuard-amd64
  tag: "blue"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "acedemand-sa"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Service ayarları
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

# Gateway API ayarları
gateway:
  enabled: true
  name: external-http
  hostname: kuard.example.com
  path: /
  pathType: PathPrefix

# StatefulSet ayarları
statefulset:
  serviceName: kuard
  updateStrategy: RollingUpdate
  podManagementPolicy: OrderedReady

# Storage ayarları
persistence:
  enabled: true
  storageClass: "standard"
  accessMode: ReadWriteOnce
  size: 1Gi

# Kaynak limitleri
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
